{"version":3,"sources":["../../src/controller/foodtruck.js"],"names":["config","db","api","post","req","res","newFoodTruck","name","body","foodtype","avgcost","geometry","coordinates","save","err","send","json","message","get","find","foodtrucks","findById","params","id","foodtruck","put","delete","remove","_id","newReview","title","text","review","reviews","push"],"mappings":"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","file":"foodtruck.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport FoodTruck from '../model/foodtruck';\nimport Review from '../model/review';\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  // CRUD - Create Read Update Delete\n\n  // '/v1/foodtruck/add'\n  api.post('/add', (req, res) => {\n    let newFoodTruck = new FoodTruck();\n    newFoodTruck.name = req.body.name;\n    newFoodTruck.foodtype = req.body.foodtype\n    newFoodTruck.avgcost = req.body.avgcost;\n    newFoodTruck.geometry.coordinates = req.body.geometry.coordinates;\n\n    newFoodTruck.save(err => {\n      if (err) {\n        res.send(err);\n      }\n      res.json ({ message: 'Food truck saved successfully.'});\n    });\n  });\n\n  // '/v1/foodtruck/' - Read\n  api.get('/', (req, res) => {\n    FoodTruck.find({}, (err, foodtrucks) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(foodtrucks);\n    });\n  });\n\n  // 'v1/foodtruck/:id' - Read 1\n  api.get('/:id', (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(foodtruck);\n    });\n  });\n\n  // '/v1/foodtruck/:id' - Update\n  api.put('/:id', (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      foodtruck.name = req.body.name;\n      foodtruck.foodtype = req.body.foodtype;\n      foodtruck.avgcost = req.body.avgcost;\n      foodtruck.geometry.coordinates = req.body.geometry.coordinates;\n      foodtruck.save(function(err) {\n        if (err) {\n          res.send(err);\n        }\n        res.json({ message: 'Food Truck info updated' });\n      });\n    });\n  });\n\n  // '/v1/foodtruck/:id' - Delete\n  api.delete('/:id', (req, res) => {\n    FoodTruck.remove ({\n      _id: req.params.id\n    }, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json({ message: \"FoodTruck successfully removed.\"});\n    });\n  });\n\n  // add review for a specific foodtruck id\n  // 'v1/foodtruck/reviews/add/:id'\n  api.post('/reviews/add/:id', (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      let newReview = new Review();\n\n      newReview.title = req.body.title;\n      newReview.text = req.body.text;\n      newReview.foodtruck = foodtruck._id;\n      newReview.save((err, review) => {\n        if (err) {\n          res.send(err);\n        }\n        foodtruck.reviews.push(newReview);\n        foodtruck.save(err => {\n          if (err) {\n            res.send(err);\n          }\n          res.json({ message: 'Food truck review saved.' });\n        });\n      });\n    });\n  });\n\n// get reviews for a specific food truck id\n// '/v1/foodtruck/reviews/:id'\napi.get('/reviews/:id', (req, res) => {\n  Review.find({foodtruck: req.params.id}, (err, reviews) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(reviews);\n  });\n});\n\n  return api;\n}\n"]}